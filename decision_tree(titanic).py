# -*- coding: utf-8 -*-
"""Decision_tree(titanic)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UfobVHGFa2K-p95eo6O4uZWqcwDUJKBN
"""

import seaborn as sns
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

df = sns.load_dataset("titanic")

df.head()

df.columns

df.isnull().sum()

df=df[['pclass','sex','age','survived']]

df=df.dropna()

df['sex']=df['sex'].map({'male':0,'female':1})

X = df[['pclass', 'sex', 'age']]
y = df['survived']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = DecisionTreeClassifier()
clf.fit(X_train, y_train)

pred = clf.predict(X_test)
acc = accuracy_score(y_test, pred)
print("Accuracy:", acc)

pclass = int(input("Enter class (1,2,3): "))
sex = input("Enter gender (male/female): ")
age = float(input("Enter age: "))
sex_num = 0 if sex == "male" else 1

prediction = clf.predict([[pclass, sex_num, age]])[0]
result = "Survived ✅" if prediction == 1 else "Not Survived ❌"
print("Prediction:", result)

plt.figure(figsize=(10,6))
plot_tree(clf, feature_names=X.columns, class_names=["Not Survived", "Survived"], filled=True)
plt.show()